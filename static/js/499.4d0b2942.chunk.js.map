{"version":3,"file":"static/js/499.4d0b2942.chunk.js","mappings":"2NAEaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAErBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,oBCHnC,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAgG,6BAAhG,EAAmI,2B,UCKtHC,EAAgB,WAC3B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMT,GAAWU,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAaXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,OAGL,EAQKC,EAAa,WACjBV,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMS,UAAWC,EAAaC,SAZX,SAAAN,GACnBA,EAAEO,iBA3BoB,SAACf,EAAME,GACd,OAARR,QAAQ,IAARA,GAAAA,EAAUsB,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,OAASA,CAArB,IACzBkB,MAAM,GAAD,OAAIlB,EAAJ,iCACLK,GACEc,EAAAA,EAAAA,IAAY,CACVnB,KAAAA,EACAE,OAAAA,IAGT,CAmBCkB,CAAgBpB,EAAME,GACtBS,GACD,EAQC,WACE,eAAIC,UAAWC,EAAf,wBACA,kBACED,UAAWC,EACXQ,KAAK,OACLrB,KAAK,OACLsB,YAAY,wBACZZ,MAAOV,EACPuB,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBACEd,UAAWC,EACXS,YAAY,wBACZK,KAAK,MACLjB,MAAOR,EACPqB,SAAUhB,EACVP,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQd,UAAWC,EAAYc,KAAK,SAApC,2BAKL,EC9ED,EAAuB,0BAAvB,EAAwD,0BCI3CC,EAAc,WACzB,IAAMlC,GAAWU,EAAAA,EAAAA,IAAYR,GAE7B,OACE,eAAIgB,UAAWC,EAAf,SACGnB,EAASmC,KAAI,gBAAGC,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,yBACE,cAAGU,UAAWC,EAAd,mBAA+Bb,EAA/B,cAAyCE,MADlC4B,EADG,KAOnB,ECTc,SAASC,IACtB,IAAM1B,GAAWC,EAAAA,EAAAA,MACX0B,GAAY5B,EAAAA,EAAAA,IAAYZ,GAM9B,OAJAyC,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,iCACE,SAAC8B,EAAA,EAAD,WACE,gDAEF,SAACrC,EAAD,KACA,yBAAMkC,GAAa,4BACnB,SAACJ,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","page/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter.filter;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"label\":\"ContactEditor_label__EWAJt\",\"input\":\"ContactEditor_input__Nbns0\",\"btn\":\"ContactEditor_btn__PzOHe\"};","import { selectContacts } from '../../redux/contacts/selectors';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport styles from './ContactEditor.module.css';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onAddNewContact = (name, number) => {\n    return contacts?.find(contact => contact.name === name)\n      ? alert(`${name} is already in your contacts`)\n      : dispatch(\n          addContacts({\n            name,\n            number,\n          })\n        );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: {\n        return;\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddNewContact(name, number);\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <h3 className={styles.label}>Phonebook</h3>\n      <input\n        className={styles.input}\n        text=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name of contact\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        className={styles.input}\n        placeholder=\"Enter contact number \"\n        type=\"tel\"\n        value={number}\n        onChange={handleChange}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"text\":\"ContactList_text__+NWAW\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p className={styles.text}>{`${name} : ${number}`}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectContacts","items","ContactEditor","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetInput","className","styles","onSubmit","preventDefault","find","contact","alert","addContacts","onAddNewContact","text","placeholder","onChange","pattern","title","required","type","ContactList","map","id","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}